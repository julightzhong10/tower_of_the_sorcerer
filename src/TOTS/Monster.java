package TOTS;

public class Monster extends Staff{
	private int HP;
	private int attack;
	private int defence;
	private int EX;
	private int money;
	private int MT;
	
	Monster(int HP, int attack, int defence,int money, int EX, 
			String Name,int type,int MT){
		this.HP=HP;
		this.attack=attack;
		this.defence=defence;
		this.EX=EX;
		this.money=money;
		this.setName(Name);
		this.setStaffType(type);
		this.MT=MT;
		
	}
	
	 public void setHP(int HP){
		   this.HP=HP;
	 }
	 public void setAttack(int a){
		   attack=a;
	 }
	   
	 public void setDefence(int d){
		   defence=d;
	 }
	 public void setEX(int ex){
		   EX=ex;
	 }
	 public void setMoney(int m){
		   money=m;
	 }
	 public int getHP(){
		   return HP;
	   }
	 public int getAttack(){
		   return attack;
	   }
	   
	   public int getDefence(){
		   return defence;
	   }
	   public int getEX(){
		   return defence;
	   }
	   public int getMoney(){
		   return money;
	   }
	   public int getMT(){
		   return MT;
	   }
	   
	   
	   public static Monster getMonster(int MT){
		   
		   switch(MT){
		   case 50:return new Monster(50, 20, 1, 1, 1, "��ͷ��",6,MT);
		   case 1:return new Monster(70, 15, 2, 2, 2, "��ͷ��",6,MT);
		   case 2:return new Monster(100, 20, 5, 3, 3, "С����",6,MT);
		   case 3:return new Monster(110, 25, 5, 5, 4, "������",6,MT);
		   case 4:return new Monster(200, 35, 10, 5, 5, "��ͷ��",6,MT);
		   case 5:return new Monster(150, 40, 20, 8, 6, "����ʿ��",6,MT);
		   case 6:return new Monster(125, 50, 25, 10, 7, "������ʦ",6,MT);
		   case 7:return new Monster(150, 65, 30, 10, 8, "������",6,MT);
		   case 8:return new Monster(300, 75, 45, 13, 10, "������",6,MT);
		   case 9:return new Monster(400, 90, 50, 15, 12, "���öӳ�",6,MT);
		   case 10:return new Monster(500, 115, 65, 15, 15, "ʯͷ����",6,MT);
		   
		   
		   case 11:return new Monster(250, 120, 70, 20, 17, "���·�ʦ",6,MT);
		   case 12:return new Monster(450, 150, 90, 22, 19, "��������",6,MT);
		   case 13:return new Monster(550, 160, 90, 25, 20, "������",6,MT);
		   case 14:return new Monster(100, 200, 110, 30, 25, "�߼���ʦ",6,MT);
		   case 15:return new Monster(700, 250, 125, 32, 30, "����",6,MT);
		   case 16:return new Monster(1300, 300, 150, 40, 35, "������ʿ",6,MT);
		   case 17:return new Monster(850, 350, 200, 45, 40, "����ʿ",6,MT);
		   case 18:return new Monster(500, 400, 260, 47, 45, "���·�ʦ",6,MT);
		   case 19:return new Monster(900, 450, 330, 50, 50, "������ʿ",6,MT);
		   case 20:return new Monster(1250, 500, 400, 55, 55, "ڤ����",6,MT);
		  
		   
		   case 21:return new Monster(1500, 560, 460, 60, 60, "�߼�����",6,MT);
		   case 22:return new Monster(1200, 620, 520, 65, 75, "˫�ֽ�ʿ",6,MT);
		   case 23:return new Monster(2000, 680, 590, 70, 65, "ڤսʿ",6,MT);
		   case 24:return new Monster(900, 750, 650, 77, 70, "��ӳ�",6,MT);
		   case 25:return new Monster(1500, 830, 730, 80, 70, "�鷨ʦ",6,MT);
		   case 26:return new Monster(2500, 900, 850, 84, 75, "ڤ�ӳ�",6,MT);
		   case 27:return new Monster(1200, 980, 900, 88, 75, "����ʿ",6,MT);
		   case 28:return new Monster(3100, 1150, 1050, 92, 80, "Ӱ��սʿ",6,MT);
		   case 29:return new Monster(15000, 1000, 1000, 100, 100, "����ħ��",6,MT);
		   case 30:return new Monster(20000, 1333, 1333, 133, 133, "����ħ��",6,MT);
		   
		   case 40:return new Monster(33333, 2000, 1000, 375, 330, "ڤ��ħ��",6,MT);
		   case 41:return new Monster(3333, 1200, 1133, 112, 100, "ڤ�ӳ�",6,MT);
		   case 42:return new Monster(1600, 1306, 1200, 117, 100, "����ʿ",6,MT);
		   case 43:return new Monster(2400, 2612, 2400, 146, 125, "����ʿ",6,MT);
		   case 44:return new Monster(45000, 2550, 2250, 312, 275, "ڤ��ħ��",6,MT);
		   case 45:return new Monster(2000, 1106, 973, 106, 93, "�鷨ʦ",6,MT);
		   case 46:return new Monster(3000, 2212, 1946, 132, 116, "�鷨ʦ",6,MT);
		   case 47:return new Monster(60000, 3400, 3000, 390, 343, "ڤ��ħ��",6,MT);
		   case 48:return new Monster(99999, 5000, 4000, 0, 0, "ѪӰ",6,MT);
		   case 49:return new Monster(99999, 9999, 5000, 0, 0, "ħ��",6,MT);
			   
			   
			   
		   default:return null;
		   }
		}
	   
	   public static int[][] getMonstermap(int floor){
		   switch(floor){
    	     case 1:{
    		        return new int[][]{
    			    {0,0,0,50,1,50,0,0,0,0,0},//1
    	            {0,0,0,0,0,0,0,0,0,0,0},//2
    	            {0,0,3,0,0,0,0,0,0,0,0},//3
    	            {0,3,0,0,0,0,0,0,0,0,0},//4
    	            {0,0,0,0,0,0,0,0,4,0,0},//5
    	            {0,5,0,0,0,0,6,50,2,0,0},//6
    	            {0,0,0,0,0,0,0,0,0,0,0},//7
    	            {0,0,0,0,0,0,0,0,0,0,0},//8
    	            {0,5,0,0,0,0,0,0,0,0,0},
    	            {0,0,0,0,0,0,0,0,0,8,0},
    	            {0,0,0,0,0,0,0,0,0,0,0}};
    	     }
    	     case 2:{return new int[][]{
		       {0,0,0,24,0,0,0,0,0,0,0},//1
               {0,0,0,0,0,0,0,0,0,0,0},//2
               {0,0,0,0,0,0,0,0,0,17,0},//3
               {0,0,0,0,0,0,0,0,0,0,0},//4
               {0,0,0,0,0,0,0,0,0,0,0},//5
               {0,0,0,0,0,0,0,0,0,0,0},//6
               {0,0,0,0,0,0,0,0,17,0,0},//7
               {0,0,0,0,0,0,0,0,0,0,0},//8
               {0,0,0,0,0,0,0,0,0,0,0},//9
               {0,0,0,0,0,0,0,0,0,0,0},//10
               {0,0,0,0,0,0,0,0,0,0,0}};//11
            
           }
    	     case 3:{return new int[][]{
		       {0,1,0,0,0,0,0,0,0,0,0},//1
               {1,0,0,0,0,0,0,0,0,2,0},//2
               {0,3,0,0,0,0,0,0,0,0,0},//3
               {0,0,0,0,0,3,0,0,0,0,1},//4
               {0,0,0,0,0,0,0,0,0,0,2},//5
               {50,0,0,2,1,2,0,0,0,0,1},//6
               {50,0,0,0,0,0,0,0,0,0,0},//7
               {0,0,0,0,0,0,0,0,0,0,0},//8
               {0,0,0,0,2,0,1,0,1,0,0},//9
               {0,0,0,0,0,0,0,2,0,0,0},//10
               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	    	 
    	     }
    	     case 4:{
    	    	 return new int[][]{
    			       {0,4,0,0,0,0,0,0,0,4,0},//1
    	               {0,0,0,0,0,0,0,0,0,0,0},//2
    	               {0,0,3,0,0,0,0,0,3,0,0},//3
    	               {0,0,0,0,7,13,7,0,0,0,0},//4
    	               {2,0,0,0,0,7,0,0,0,0,2},//5
    	               {2,0,0,0,0,0,0,0,0,0,2},//6
    	               {1,0,0,0,8,12,8,0,0,0,1},//7
    	               {0,0,0,0,0,8,0,0,0,0,0},//8
    	               {0,0,0,0,0,0,0,0,0,0,0},//9
    	               {0,0,0,0,0,0,0,0,0,0,0},//10
    	               {0,0,0,4,0,0,0,4,0,0,0}};
    	     }
    	     case 5:{
    	    	 return new int[][]{
    			       {0,0,0,0,0,6,0,0,6,0,0},//1
    	               {0,0,0,0,6,0,0,0,0,6,0},//2
    	               {7,0,0,0,5,0,0,0,0,0,0},//3
    	               {0,0,6,0,0,5,0,0,8,5,0},//4
    	               {7,0,0,0,0,0,0,0,0,0,5},//5
    	               {0,0,0,0,0,2,3,0,0,0,0},//6
    	               {0,0,0,4,0,0,0,0,0,0,0},//7
    	               {0,0,0,4,0,0,0,0,8,12,0},//8
    	               {0,0,0,2,0,0,0,0,0,0,0},//9
    	               {0,0,0,0,0,2,0,0,0,0,0},//10
    	               {0,0,2,0,0,0,0,0,0,0,0}};//11
    	     }
    	     case 6:{
    	    	 return new int[][]{
    			       {0,9,0,0,0,0,15,0,0,0,0},//1
    	               {9,0,0,0,0,0,0,15,0,10,0},//2
    	               {0,13,0,0,0,13,0,0,0,0,10},//3
    	               {0,0,0,12,0,0,0,0,0,19,0},//4
    	               {0,0,0,0,0,0,0,0,0,0,0},//5
    	               {0,0,14,0,0,0,0,0,14,0,0},//6
    	               {0,0,0,0,0,0,0,0,0,0,0},//7
    	               {0,0,7,0,7,0,0,0,0,0,0},//8
    	               {0,0,0,0,0,0,0,0,0,0,0},//9
    	               {0,0,7,0,0,0,0,0,0,0,0},//10
    	               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	     }
    	     case 7:{
    	    	 return new int[][]{
    			       {0,0,0,0,0,0,0,0,0,0,0},//1
    	               {0,0,0,13,0,0,0,9,0,0,0},//2
    	               {0,0,13,0,0,16,0,0,9,0,0},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {0,0,0,16,0,0,0,16,0,0,0},//5
    	               {0,0,0,0,0,0,0,0,0,0,0},//6
    	               {0,0,0,0,0,16,0,0,0,0,0},//7
    	               {0,0,0,0,0,0,0,0,0,0,0},//8
    	               {0,0,0,0,0,0,0,0,0,0,0},//9
    	               {0,0,0,0,0,0,0,0,0,0,0},//10
    	               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	     }
    	     case 8:{return new int[][]{
		       {0,0,0,0,0,0,0,0,0,9,0},//1
               {0,0,0,0,0,0,0,0,0,0,0},//2
               {0,0,0,0,0,0,0,0,0,0,0},//3
               {0,0,0,0,11,0,0,0,7,0,4},//4
               {7,0,0,0,0,0,0,0,0,0,4},//5
               {13,0,0,0,0,0,0,0,0,0,0},//6
               {7,0,4,0,0,0,0,0,0,13,0},//7
               {0,0,4,0,0,0,12,0,0,0,0},//8
               {0,0,0,9,0,0,9,0,0,0,0},//9
               {0,0,0,0,0,0,0,0,0,0,0},//10
               {0,0,11,0,0,0,0,15,16,15,0}};//11
    	    	 
    	     }case 9:{
    	    	 return new int[][]{
    			       {0,0,0,0,0,0,0,0,0,0,0},//1
    	               {0,0,19,0,0,0,0,0,0,0,9},//2
    	               {0,0,0,0,0,0,0,0,0,0,0},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {0,0,0,0,0,0,0,0,0,0,0},//5
    	               {0,0,0,0,0,0,0,0,0,0,0},//6
    	               {0,18,0,0,11,0,0,0,0,0,0},//7
    	               {0,0,0,0,0,0,0,0,0,0,0},//8
    	               {9,0,9,0,0,0,0,0,0,0,0},//9
    	               {0,9,0,0,10,11,10,0,0,0,9},//10
    	               {0,0,9,0,0,10,0,0,0,0,0}};//11
    	     }
    	     case 10:{
    	    	 return new int[][]{
    			       {0,0,0,0,19,0,19,0,0,0,0},//1
    	               {0,0,0,0,0,0,0,0,0,0,10},//2
    	               {0,0,0,0,0,0,0,0,0,10,0},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {7,0,0,0,0,0,0,0,0,0,0},//5
    	               {13,0,0,0,0,0,0,0,0,0,0},//6
    	               {7,0,0,0,0,0,0,0,0,13,0},//7
    	               {0,0,0,0,0,0,0,0,0,0,0},//8
    	               {0,0,0,0,0,0,0,13,0,0,0},//9
    	               {0,0,0,0,0,0,11,0,11,0,0},//10
    	               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	     }
    	     case 11:{return new int[][]{
		       {0,0,0,0,0,0,0,0,0,0,0},//1
               {0,0,0,0,0,0,0,0,12,12,12},//2
               {0,0,0,0,0,0,0,0,0,12,0},//3
               {0,0,0,0,0,0,0,0,0,0,0},//4
               {0,0,0,0,0,0,0,0,0,0,0},//5
               {0,0,0,0,0,0,0,0,0,0,0},//6
               {0,0,0,20,0,22,0,20,0,0,0},//7
               {0,0,19,0,0,0,0,0,19,0,0},//8
               {0,0,19,0,0,0,0,0,19,0,0},//9
               {0,0,0,0,0,0,0,0,0,0,0},//10
               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	    	 
    	     }
    	     case 12:{
    	    	 return new int[][]{
    			       {0,0,0,0,17,24,17,0,0,0,0},//1
    	               {0,0,0,0,0,0,0,0,0,0,0},//2
    	               {0,0,0,0,0,24,0,0,0,0,0},//3
    	               {0,22,0,0,0,0,0,0,0,27,0},//4
    	               {22,23,0,0,0,0,0,0,0,25,27},//5
    	               {0,0,0,0,0,0,0,0,0,0,0},//6
    	               {0,0,0,0,0,0,0,0,0,0,0},//7
    	               {0,0,0,0,0,0,0,0,0,0,0},//8
    	               {0,22,0,20,20,21,20,20,0,22,0},//9
    	               {0,0,0,0,0,0,0,0,0,0,0},//10
    	               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	     }
    	     case 13:{
    	    	 return new int[][]{
    			       {0,22,0,0,0,0,0,0,0,23,0},//1
    	               {0,0,0,0,0,0,0,0,0,0,0},//2
    	               {0,0,0,0,20,0,0,0,0,0,0},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {17,0,0,0,23,0,20,0,0,0,0},//5
    	               {24,0,0,26,0,0,21,0,0,0,0},//6
    	               {17,0,23,0,0,0,20,0,0,0,0},//7
    	               {0,0,0,0,0,0,0,0,0,0,0},//8
    	               {0,17,0,0,0,0,0,23,0,0,0},//9
    	               {0,0,0,0,0,0,0,0,0,0,0},//10
    	               {0,0,0,0,0,0,0,0,26,0,0}};//11
    	     }
    	     case 14:{
    	    	 return new int[][]{
    			       {0,0,27,0,0,0,0,0,0,0,0},//1
    	               {0,0,0,0,0,0,0,0,0,0,0},//2
    	               {0,0,0,0,0,0,0,0,0,0,0},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {0,0,0,0,0,0,0,0,0,0,0},//5
    	               {0,0,0,0,0,23,0,0,0,0,0},//6
    	               {0,0,0,0,0,26,0,0,0,0,0},//7
    	               {0,0,0,0,0,23,0,0,0,0,0},//8
    	               {0,0,0,0,0,0,0,0,0,0,0},//9
    	               {0,20,21,20,0,0,0,20,21,20,0},//10
    	               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	    	 
    	     }
    	     case 15:{
    	    	 return new int[][]{
    			       {0,0,0,0,0,0,0,0,0,0,0},//1
    	               {0,0,0,0,0,0,0,0,0,0,0},//2
    	               {0,0,0,0,0,0,0,0,0,0,0},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {0,0,0,0,0,0,0,0,0,0,0},//5
    	               {0,0,0,0,0,0,0,0,0,0,0},//6
    	               {0,0,0,0,0,0,0,0,0,0,0},//7
    	               {0,0,0,0,0,0,0,0,0,0,0},//8
    	               {0,0,0,0,0,0,0,0,0,0,0},//9
    	               {0,0,0,0,0,0,0,0,0,0,0},//10
    	               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	     }
    	     case 16:{
    	    	 return new int[][]{
    			       {0,0,0,0,0,0,0,0,0,0,0},//1
    	               {0,0,0,0,0,0,0,0,0,0,0},//2
    	               {0,0,0,0,0,0,0,0,0,0,0},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {0,0,0,0,0,0,0,0,0,0,0},//5
    	               {0,0,0,0,0,29,0,0,0,0,0},//6
    	               {0,0,0,0,0,0,0,0,0,0,0},//7
    	               {0,0,0,0,0,0,0,0,0,0,0},//8
    	               {0,0,0,0,0,0,0,0,0,0,0},//9
    	               {0,0,0,0,0,0,0,0,0,0,0},//10
    	               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	     }
    	     case 17:{
    	    	 return new int[][]{
    			       {0,27,26,0,0,0,0,0,0,0,27},//1
    	               {0,26,0,0,0,0,0,0,0,0,0},//2
    	               {0,0,0,27,0,0,0,0,0,0,27},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {0,0,0,0,0,27,0,0,0,27,0},//5
    	               {0,0,0,27,0,0,0,0,0,0,0},//6
    	               {0,0,0,0,0,0,0,27,0,27,0},//7
    	               {0,26,0,0,0,0,0,0,0,0,0},//8
    	               {0,27,26,0,28,0,0,27,0,0,27},//9
    	               {0,0,0,0,0,0,0,0,0,0,0},//10
    	               {0,0,28,0,0,0,0,0,0,0,27}};//11
    	     }
    	     case 18:{
    	    	 return new int[][]{
    			       {0,0,0,0,0,0,0,0,0,0,0},//1
    	               {0,0,0,0,0,0,0,0,0,0,0},//2
    	               {0,0,0,0,0,0,0,0,0,0,0},//3
    	               {0,0,0,0,0,0,0,0,0,0,0},//4
    	               {0,0,0,0,0,0,0,0,0,0,0},//5
    	               {0,0,0,0,0,0,0,0,0,0,0},//6
    	               {0,0,0,0,0,0,0,0,0,0,0},//7
    	               {0,0,0,0,0,0,0,0,0,0,0},//8
    	               {0,0,0,0,0,0,0,0,0,0,0},//9
    	               {0,0,0,0,0,0,0,0,0,0,0},//10
    	               {0,0,0,0,0,0,0,0,0,0,0}};//11
    	     }
    	   default:return null;
       }
	   }
	   /*return new int[][]{
		       {0,0,0,0,0,0,0,0,0,0,0},//1
               {0,0,0,0,0,0,0,0,0,0,0},//2
               {0,0,0,0,0,0,0,0,0,0,0},//3
               {0,0,0,0,0,0,0,0,0,0,0},//4
               {0,0,0,0,0,0,0,0,0,0,0},//5
               {0,0,0,0,0,0,0,0,0,0,0},//6
               {0,0,0,0,0,0,0,0,0,0,0},//7
               {0,0,0,0,0,0,0,0,0,0,0},//8
               {0,0,0,0,0,0,0,0,0,0,0},//9
               {0,0,0,0,0,0,0,0,0,0,0},//10
               {0,0,0,0,0,0,0,0,0,0,0}};//11*/
}
