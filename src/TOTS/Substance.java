package TOTS;

public class Substance {
	private int use;
	private int x;
    private int y;
    private int subType;//rKey1, yKey2, bKey3, rMedical+200HP/4,bMedical+500HP/5,
                        // rDiamond+3Attack/6, bDiamond+3Defence/7
                        //IronSword+10Attack/8, IronShield+10Defence/9
                        //SilverSword+20Attack/10, SilverShield+20Defence/11
                        //KnightSword+40Attack/12,  KnightShield+40Defence/13
                        //HolySword+50Attack/14,  HolyShield+50Defence/15
                        //SuperSword+100Attack/16,SuperShield+100Defence/17
    
                        //Holycheck List18
                        
    
    public void setUse(int x){
    this.use=x;
    }

    public void setX(int x){
    	this.x=x;
    }
    public void setY(int y){
    	this.y=y;
    }
    public void setSubType(int t){
		subType=t;
	}

    public int getUse(){
    	return use;
    }

    public int getX(){
    	return x;
    }
    public int getY(){
    	return y;
    }
    public int getSubType(){
		return subType;
	}
    
    public static int getSubstanceUse(int x){
    	
    	switch(x){
    	case 1:return 1;
    	case 2:return 1;
    	case 3:return 1;
    	case 4:return 200;
    	case 5:return 500;
    	case 6:return 3;
    	case 7:return 3;
    	case 8:return 10;
    	case 9:return 10;
    	case 10:return 20;
    	case 11:return 20;
    	case 12:return 40;
    	case 13:return 40;
    	case 14:return 50;
    	case 15:return 50;
    	case 16:return 100;
    	case 17:return 100;
    	default:return 0;
    	}
    	
    }
    
    public static int[][] getSubstancemap(int floor){
		   switch(floor){
 	     case 1:{
 		        return new int[][]{
 			    {0,0,2,0,0,0,0,0,0,0,0},//1
 	            {0,0,0,0,0,0,0,0,0,0,0},//2
 	            {4,0,0,0,0,0,4,2,4,0,0},//3
 	            {2,0,6,0,0,0,4,2,4,0,0},//4
 	            {0,0,0,0,0,0,0,0,0,0,0},//5
 	            {2,0,0,0,0,0,0,0,0,0,0},//6
 	            {7,0,3,0,0,0,0,0,0,0,0},//7
 	            {0,0,0,0,0,0,0,0,0,0,0},//8
 	            {0,0,0,0,0,0,0,0,0,0,0},
 	            {4,5,2,0,1,0,0,0,2,0,3},
 	            {4,18,2,0,0,0,0,0,2,2,2}};
 	     }
 	     case 2:{return new int[][]{
		    {0,0,0,0,0,0,6,7,2,1,0},//1
            {0,0,7,0,5,0,6,7,2,3,0},//2
            {0,0,2,0,2,0,6,7,2,0,0},//3
            {0,0,2,0,2,0,0,0,0,0,0},//4
            {0,0,0,0,0,0,0,0,0,0,0},//5
            {0,0,0,0,0,0,0,0,0,0,0},//6
            {0,0,0,0,0,0,0,0,0,0,0},//7
            {0,0,0,0,0,0,0,0,0,0,0},//8
            {0,0,2,0,5,4,0,0,0,0,0},//9
            {0,0,2,0,5,4,0,0,0,0,0},//10
            {0,0,6,0,5,4,0,0,0,0,0}};//11
         
        }
 	     case 3:{
 	    	return new int[][]{
 		        {8,0,2,0,0,0,0,0,0,0,0},//1
                {0,2,0,0,0,0,0,0,0,0,0},//2
                {2,0,0,0,0,0,0,0,0,0,0},//3
                {0,0,0,0,0,0,0,0,2,0,0},//4
                {0,0,0,0,0,0,0,0,2,0,0},//5
                {0,0,0,0,0,0,0,0,2,0,0},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,0,0,7,0,2,0,0},//10
                {0,0,0,0,0,0,6,5,2,0,0}};//11
 	     }
 	     case 4:{
 	    	return new int[][]{
 		        {0,0,0,0,0,0,0,0,0,0,0},//1
                {0,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,0},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,4,0,7,0,7,0,4,0,0},//5
                {0,0,4,0,0,0,0,0,4,0,0},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,6,0,6,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,2,0,2,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};
 	     }
 	     case 5:{
 	    	return new int[][]{
 		        {0,0,4,0,5,0,0,0,0,2,3},//1
                {0,0,6,0,0,0,0,0,0,0,2},//2
                {0,0,0,0,0,0,0,0,0,0,0},//3
                {0,0,0,0,9,0,0,0,0,0,0},//4
                {0,0,0,0,0,0,0,0,0,0,0},//5
                {6,0,0,0,0,0,0,0,0,0,0},//6
                {7,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,0,0,0,7,0,0,0},//10
                {0,0,0,0,0,0,0,2,0,0,0}};//11
 	     }
 	     case 6:{
 	    	return new int[][]{
 		        {0,0,0,6,0,2,0,0,0,5,5},//1
                {0,2,0,7,0,0,2,0,0,0,5},//2
                {2,0,0,0,0,0,0,2,0,0,0},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,0,0,0,0,0,0,0},//5
                {0,0,0,0,2,2,2,0,0,0,0},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }case 7:{
 	    	return new int[][]{
 		        {0,0,0,0,0,0,0,0,0,0,0},//1
                {0,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,7,0,0,0,6,0,0,0},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,0,0,0,0,0,0,0},//5
                {0,0,0,0,0,0,0,0,0,0,0},//6
                {0,0,4,6,0,0,0,7,4,0,0},//7
                {0,0,2,4,0,0,0,4,2,0,0},//8
                {0,0,0,3,3,5,3,3,0,0,0},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	     case 8:{
 	    	return new int[][]{
 		        {0,0,0,0,0,0,0,0,2,0,0},//1
                {0,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,6},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,4,0,0,0,0,0,0},//5
                {0,0,7,0,4,0,0,0,0,0,0},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	     case 9:{
 	    	return new int[][]{
 		        {0,2,0,0,0,0,0,0,0,0,0},//1
                {2,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,2},//3
                {0,0,0,0,0,0,0,0,0,0,2},//4
                {0,0,0,0,0,0,0,0,0,0,4},//5
                {0,0,0,0,0,0,0,0,0,0,0},//6
                {7,0,6,0,0,0,0,0,0,0,4},//7
                {0,0,0,0,0,0,0,0,0,0,2},//8
                {0,4,0,0,0,0,0,0,0,0,2},//9
                {3,0,4,0,0,0,0,0,0,0,0},//10
                {13,3,0,0,5,0,5,0,0,0,0}};//11
 	     }
 	     case 10:{
 	    	return new int[][]{
 		        {0,0,0,7,0,0,0,6,0,0,0},//1
                {0,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,5},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,2,2,2,0,0,0,2},//5
                {0,0,0,0,0,0,0,0,0,0,2},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,4,7,6,0,0,0,0,0,2},//9
                {0,0,4,7,6,0,0,0,0,0,2},//10
                {0,0,4,7,6,0,3,0,3,0,0}};//11
 	     }
 	     case 11:{
 	    	return new int[][]{
 		        {4,0,2,0,3,0,1,0,5,0,5},//1
                {4,0,2,0,3,0,1,0,0,0,0},//2
                {4,0,2,0,3,0,1,0,0,0,0},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,0,0,0,0,0,0,0},//5
                {0,0,0,0,0,0,0,0,0,0,0},//6
                {7,0,0,0,5,0,5,0,0,0,6},//7
                {7,0,0,0,0,0,0,0,0,0,6},//8
                {7,0,0,0,0,0,0,0,0,0,6},//9
                {0,0,0,0,4,0,4,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	     case 12:{
 	    	return new int[][]{
 		        {0,7,0,0,0,0,0,0,0,5,0},//1
                {6,0,0,0,0,0,0,0,0,0,5},//2
                {0,0,0,0,0,0,0,0,0,0,0},//3
                {0,0,0,0,0,2,0,0,0,0,0},//4
                {0,0,0,0,0,2,0,0,0,0,0},//5
                {0,0,0,0,0,4,0,0,0,0,0},//6
                {0,0,0,0,0,4,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {7,0,0,0,0,0,0,0,0,0,6},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	     case 13:{
 	    	return new int[][]{
 		        {0,0,0,0,0,0,0,0,0,0,0},//1
                {0,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,0},//3
                {5,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,0,0,0,0,6,0,0},//5
                {0,0,0,0,0,0,0,0,6,0,0},//6
                {0,0,0,0,0,0,0,0,6,0,7},//7
                {0,0,0,0,0,0,0,0,0,0,7},//8
                {0,0,0,0,0,0,0,0,0,0,7},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	     case 14:{
 	    	return new int[][]{
 		        {0,0,0,0,0,0,0,0,0,0,0},//1
                {0,0,5,0,0,0,0,0,5,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,0},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,0,0,0,0,0,0,0},//5
                {0,0,4,0,0,0,0,0,4,0,0},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	     case 15:{
 	    	return new int[][]{
 		        {0,0,0,0,0,0,0,0,0,0,0},//1
                {0,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,0},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,7,0,7,0,0,0,0},//5
                {0,0,0,0,6,0,6,0,0,0,0},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	     case 16:{
 	    	return new int[][]{
 		       {0,0,0,0,0,0,0,0,0,0,0},//1
                {0,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,0},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,0,0,0,0,0,0,0},//5
                {0,0,0,0,0,0,0,0,0,0,0},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	     case 17:{
 	    	return new int[][]{
 		       {0,0,0,0,0,0,0,0,0,0,0},//1
                {0,0,0,0,0,0,0,0,0,0,0},//2
                {0,0,0,0,0,0,0,0,0,0,0},//3
                {0,0,0,0,0,0,0,0,0,0,0},//4
                {0,0,0,0,0,0,0,0,0,0,0},//5
                {0,0,0,0,0,0,0,0,0,0,0},//6
                {0,0,0,0,0,0,0,0,0,0,0},//7
                {0,0,0,0,0,0,0,0,0,0,0},//8
                {0,0,0,0,0,0,0,0,0,0,0},//9
                {0,0,0,0,0,0,0,0,0,0,0},//10
                {0,0,0,0,0,0,0,0,0,0,0}};//11
 	     }
 	   default:return null;
    }
	   }
    public static String getSubstanceMessage(int i){
    	switch(i){
    	case 1:return "You Get a Red Key! Red Key +1";
    	case 2:return "You Get a Yellow Key! Yellow Key +1";
    	case 3:return "You Get a Blue Key! Blue Key +1";
    	case 4:return "You Get a  Red Medical! HP +200";
    	case 5:return "You Get a  Blue Medical! HP +500";
    	case 6:return "You Get a Red Diamond ! Attack +3";
    	case 7:return "You Get a Blue Diamond ! Defence +3";
    	case 8:return "You Get a Iron Sword ! Attack +10";
    	case 9:return "You Get a Iron Shield ! Defence +10";
    	case 10:return "You Get a Silver Sword ! Attack +20";
    	case 11:return "You Get a Silver Shield ! Defence +20";
    	case 12:return "You Get a Knight Sword ! Attack +40";
    	case 13:return "You Get a Knight Shield ! Defence +40";
    	case 14:return "You Get a Holy Sword ! Attack +50";
    	case 15:return "You Get a Holy Shield ! Defence +50";
    	case 16:return "You Get a Super Sword ! Attack +100";
    	case 17:return "You Get a Super Shield ! Defence +100";
    	default:return "System errors";
    	
    	}
    	
    	
    	
    	
    }
}
